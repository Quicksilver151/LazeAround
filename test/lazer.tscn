[gd_scene load_steps=6 format=3 uid="uid://cpt6mmcmq02ty"]

[ext_resource type="Script" path="res://Code/Trail.gd" id="1_gdl23"]
[ext_resource type="Script" path="res://Objects/ObjectAssets/PolyCutter2D.gd" id="2_53cgg"]

[sub_resource type="GDScript" id="GDScript_7kcrj"]
script/source = "extends Area2D


@export_range(1,10,0.1) var LineWidth = 5.0

@onready var LazerArea = self
@onready var LazerPolygon = $LazerPolygon


# Called when the node enters the scene tree for the first time.
func _ready():
#	Engine.physics_ticks_per_second = 2
	pass # Replace with function body.

func _physics_process(delta):
	for child in get_children():
		child.hide()
	
	if !Input.is_mouse_button_pressed(MOUSE_BUTTON_LEFT):
		return
	
	set_line_shape()
	$Trail2D.show()
	
	if $Trail2D.points[0].distance_to($Trail2D.points[1]) < 5:
		$LazerPolygon2.show()
	else:
		$LazerPolygon.show()
		
#	queue_redraw()
	

func set_line_shape():
	var points = $Trail2D.points
	var normals = PolygonLib.compute_point_normals(points)
	var extruded = PolygonLib.translatePolygon(PolygonLib.extrude_line(points, LineWidth), -global_position)
	if Geometry2D.triangulate_polygon(extruded).is_empty():
		print(\"err lmao\")
	else:
		$LazerPolygon.polygon = extruded

func move(points: PackedVector2Array, offset: Vector2) -> PackedVector2Array:
	var new_points:PackedVector2Array = []
	for point in points:
		new_points.append(point + offset)
	return new_points

#func _draw():
#
##	draw_polygon(extruded, PackedColorArray([Color.BLUE]))
#
#	for i in range(extruded.size()):
#		var point = extruded[i]
#		var somei = i * 1.0 / extruded.size() 
#		var color = Color(somei,0,0)
#		draw_circle(point, 2, color)
##	for i in normals.size():
##		draw_line(points[i],points[i]*normals[i], Color.GREEN)


func _unhandled_input(event):
	if event is InputEventMouse:
		position = get_global_mouse_position()






"

[sub_resource type="Curve" id="Curve_7crwr"]
_data = [Vector2(0.438356, 0.215517), 0.0, 0.0794922, 0, 0, Vector2(0.979452, 0.655172), -0.0228851, 0.0, 0, 0]
point_count = 2

[sub_resource type="Gradient" id="Gradient_s1jpi"]
offsets = PackedFloat32Array(0, 0.175258, 0.360825)
colors = PackedColorArray(1, 0.227451, 0.176471, 0.176471, 1, 0.401388, 0.296128, 1, 1, 0, 0, 1)

[node name="Lazer" type="Area2D"]
script = SubResource("GDScript_7kcrj")
LineWidth = 6.4

[node name="Trail2D" type="Line2D" parent="."]
width_curve = SubResource("Curve_7crwr")
gradient = SubResource("Gradient_s1jpi")
joint_mode = 2
begin_cap_mode = 2
end_cap_mode = 2
antialiased = true
script = ExtResource("1_gdl23")
point_length = 10

[node name="LazerPolygon" type="CollisionPolygon2D" parent="."]

[node name="PolyCutter2D" type="Node2D" parent="LazerPolygon"]
script = ExtResource("2_53cgg")

[node name="LazerPolygon2" type="CollisionPolygon2D" parent="."]
polygon = PackedVector2Array(-10, 0, -7, -7, 0, -10, 7, -7, 10, 0, 7, 7, 0, 10, -7, 7)

[node name="PolyCutter2D" type="Node2D" parent="LazerPolygon2"]
script = ExtResource("2_53cgg")
